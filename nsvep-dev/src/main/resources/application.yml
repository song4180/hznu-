#数据库以及druid连接池配置
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/db_experiment?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    #使用阿里druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    druid:
      initial-size: 1
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
      web-stat-filter:
        enabled: true
        url-pattern: /*
  #邮件系统配置
  mail:
    username: security514@126.com
    #授权码
    password: 301security
    host: smtp.126.com
    default-encoding: UTF-8
  #redis配置
  redis:
      database: 0
      host: 127.0.0.1
      port: 6379
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          max-wait: 100000
      timeout: 5000


#端口
#所有的访问都要经过静态路径
#  mvc:
#    static-path-pattern: /**
#
#  resources:
#    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

#redis缓存时间(秒）3小时
continueTime: 10800

server:
  port: 8080
  servlet:
    context-path: /docker
    session:
      timeout: 7200

#日志信息打印
#logging:
#
#  level:
#    #级别为warn
#    root: warn
#    #调试使用可以看sql语句
#    #com.dockers.docker.dao: trace
#  pattern:
#    #file: '%d{HH:mm:ss.SSS} [%thread] %-5level --- [(%thread)] %cyan(%logger{40}) - %msg%n'
#  config:

mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #扫描mapper
  mapper-locations: classpath:mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.dockers.docker.entity

  global-config:
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      insert-strategy: NOT_EMPTY
      update-strategy: NOT_EMPTY
      #驼峰下划线转换
      capital-mode: true
      #逻辑删除配置（下面3个配置）
      logic-delete-field: flag
      logic-delete-value: 1
      logic-not-delete-value: 0
    #是否显示mp logo
    banner: false
  #刷新mapper 调试神器3.x被弃用
#  refresh-mapper: true
materialPath: "/home/lab404/classSource/"
imagePath: "/home/lab404/images/"

token:
  header: "token"

# 单个文件上传最大10MB，多文件上传总大小最大为10MB，最大请求正文的大小为20MB
spring.servlet.multipart.max-file-size: 10MB
spring.servlet.multipart.max-request-size: 10MB
server.tomcat.max-swallow-size: 20MB

#有关docker的配置
docker-hostIP: 172.22.236.111
docker-port: 2375
#docker-cert-path: /usr/local/dockercert
docker-cert-path: /usr/local/dockercert
api-version: 1.40
registry-url: https://zp797fnb.mirror.aliyuncs.com
registry-username: docker
registry-password: 123456
registry-email: 1225067236@qq.com